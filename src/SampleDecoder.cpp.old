/*
 * SampleDecoder.cpp
 *
 *  Created on: Jan 14, 2011
 *      Author: rtoso
 */
#include <iostream>
#include "SampleDecoder.h"

SampleDecoder::SampleDecoder()  { }
SampleDecoder::~SampleDecoder() { }

using namespace std;

double SampleDecoder::decode(const std::vector< double >& chromosome) const 
{
#ifdef AAA
   cout <<"Chromosome is :: ";
   for (unsigned j = 0; j < chromosome.size(); j++)
   {
      cout << "    " << chromosome[j];
   }
   cout << endl;
#endif

   std::vector< std::pair< double, unsigned > > ranking(chromosome.size());
   double myFitness = 0.0;

   for(unsigned i = 0; i < chromosome.size(); ++i) {
      ranking[i] = std::pair< double, unsigned >(chromosome[i], i);
      myFitness += (double)(i+1)*chromosome[i];
   }

// Here we sort 'permutation', which will then produce a permutation of [n] in pair::second:
   std::sort(ranking.begin(), ranking.end());

#ifdef AAa
   for(std::vector< std::pair< double, unsigned > >::const_iterator i = ranking.begin();
       i != ranking.end(); ++i) 
   {
      cout << i->first << " vs " << i->second << endl;
   }
#endif

// permutation[i].second is in {0, ..., n - 1}; a permutation can be obtained as follows
   std::list< unsigned > permutation;
   for(std::vector< std::pair< double, unsigned > >::const_iterator i = ranking.begin();
       i != ranking.end(); ++i) {
      permutation.push_back(i->second);
   }

// sample fitness is the first allele
return chromosome.front();
//return myFitness;
}
